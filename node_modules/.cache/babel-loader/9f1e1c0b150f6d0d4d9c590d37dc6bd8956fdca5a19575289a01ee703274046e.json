{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\react-proj\\\\shop\\\\src\\\\context\\\\context.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from 'react';\nimport { state } from '../data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StateProvider = props => {\n  _s();\n  const [state1, setState] = useState(state);\n  const addOrder = product1 => {\n    if (product1) {\n      setState(prev => ({\n        ...prev,\n        order: [...prev.order, {\n          img: product1.photo.main,\n          price: product1.sale,\n          id: product1.id,\n          name: product1.name,\n          title: product1.title,\n          amount: 1,\n          total: product1.sale\n        }]\n      }));\n    }\n  };\n  const updateOrder = (id, plus) => {\n    setState(prev => ({\n      ...prev,\n      order: prev.order.map(item => {\n        if (item.id === id) {\n          if (plus) {\n            item.amount = item.amount + 1;\n            item.total = item.amount * item.price;\n          } else if (item.amount > 1) {\n            item.amount = item.amount - 1;\n            item.total = item.amount * item.price;\n          }\n        }\n        return item;\n      })\n    }));\n  };\n  const removeOrder = id => {\n    setState(prev => ({\n      ...prev,\n      order: prev.order.filter(or => or.id !== id)\n    }));\n  };\n  useEffect(() => {\n    setState(state);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n    value: {\n      state1,\n      addOrder,\n      updateOrder,\n      removeOrder\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(StateProvider, \"0alYfKlRZWAkIqvZBL0tbdiJIPE=\");\n_c = StateProvider;\nvar _c;\n$RefreshReg$(_c, \"StateProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","state","jsxDEV","_jsxDEV","StateProvider","props","_s","state1","setState","addOrder","product1","prev","order","img","photo","main","price","sale","id","name","title","amount","total","updateOrder","plus","map","item","removeOrder","filter","or","StateContext","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Desktop/react-proj/shop/src/context/context.jsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\r\nimport { state } from '../data';\r\n\r\nexport const StateProvider = props => {\r\n  const [state1, setState] = useState(state);\r\n\r\n  const addOrder = product1 => {\r\n    if (product1) {\r\n      setState(prev => ({\r\n        ...prev,\r\n        order: [\r\n          ...prev.order,\r\n          {\r\n            img: product1.photo.main,\r\n            price: product1.sale,\r\n            id: product1.id,\r\n            name: product1.name,\r\n            title: product1.title,\r\n            amount: 1,\r\n            total: product1.sale,\r\n          },\r\n        ],\r\n      }));\r\n    }\r\n  };\r\n\r\n  const updateOrder = (id, plus) => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      order: prev.order.map(item => {\r\n        if (item.id === id) {\r\n          if (plus) {\r\n            item.amount = item.amount + 1;\r\n            item.total = item.amount * item.price;\r\n          } else if (item.amount > 1) {\r\n            item.amount = item.amount - 1;\r\n            item.total = item.amount * item.price;\r\n          }\r\n        }\r\n        return item;\r\n      }),\r\n    }));\r\n  };\r\n\r\n  const removeOrder = id => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      order: prev.order.filter(or => or.id !== id),\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setState(state);\r\n  }, []);\r\n\r\n  return (\r\n    <StateContext.Provider\r\n      value={{ state1, addOrder, updateOrder, removeOrder }}\r\n    >\r\n      {props.children}\r\n    </StateContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACjE,SAASC,KAAK,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,OAAO,MAAMC,aAAa,GAAGC,KAAK,IAAI;EAAAC,EAAA;EACpC,MAAM,CAACC,MAAM,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACC,KAAK,CAAC;EAE1C,MAAMQ,QAAQ,GAAGC,QAAQ,IAAI;IAC3B,IAAIA,QAAQ,EAAE;MACZF,QAAQ,CAACG,IAAI,KAAK;QAChB,GAAGA,IAAI;QACPC,KAAK,EAAE,CACL,GAAGD,IAAI,CAACC,KAAK,EACb;UACEC,GAAG,EAAEH,QAAQ,CAACI,KAAK,CAACC,IAAI;UACxBC,KAAK,EAAEN,QAAQ,CAACO,IAAI;UACpBC,EAAE,EAAER,QAAQ,CAACQ,EAAE;UACfC,IAAI,EAAET,QAAQ,CAACS,IAAI;UACnBC,KAAK,EAAEV,QAAQ,CAACU,KAAK;UACrBC,MAAM,EAAE,CAAC;UACTC,KAAK,EAAEZ,QAAQ,CAACO;QAClB,CAAC;MAEL,CAAC,CAAC,CAAC;IACL;EACF,CAAC;EAED,MAAMM,WAAW,GAAGA,CAACL,EAAE,EAAEM,IAAI,KAAK;IAChChB,QAAQ,CAACG,IAAI,KAAK;MAChB,GAAGA,IAAI;MACPC,KAAK,EAAED,IAAI,CAACC,KAAK,CAACa,GAAG,CAACC,IAAI,IAAI;QAC5B,IAAIA,IAAI,CAACR,EAAE,KAAKA,EAAE,EAAE;UAClB,IAAIM,IAAI,EAAE;YACRE,IAAI,CAACL,MAAM,GAAGK,IAAI,CAACL,MAAM,GAAG,CAAC;YAC7BK,IAAI,CAACJ,KAAK,GAAGI,IAAI,CAACL,MAAM,GAAGK,IAAI,CAACV,KAAK;UACvC,CAAC,MAAM,IAAIU,IAAI,CAACL,MAAM,GAAG,CAAC,EAAE;YAC1BK,IAAI,CAACL,MAAM,GAAGK,IAAI,CAACL,MAAM,GAAG,CAAC;YAC7BK,IAAI,CAACJ,KAAK,GAAGI,IAAI,CAACL,MAAM,GAAGK,IAAI,CAACV,KAAK;UACvC;QACF;QACA,OAAOU,IAAI;MACb,CAAC;IACH,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMC,WAAW,GAAGT,EAAE,IAAI;IACxBV,QAAQ,CAACG,IAAI,KAAK;MAChB,GAAGA,IAAI;MACPC,KAAK,EAAED,IAAI,CAACC,KAAK,CAACgB,MAAM,CAACC,EAAE,IAAIA,EAAE,CAACX,EAAE,KAAKA,EAAE;IAC7C,CAAC,CAAC,CAAC;EACL,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACdS,QAAQ,CAACP,KAAK,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEE,OAAA,CAAC2B,YAAY,CAACC,QAAQ;IACpBC,KAAK,EAAE;MAAEzB,MAAM;MAAEE,QAAQ;MAAEc,WAAW;MAAEI;IAAY,CAAE;IAAAM,QAAA,EAErD5B,KAAK,CAAC4B;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAE5B,CAAC;AAAC/B,EAAA,CA3DWF,aAAa;AAAAkC,EAAA,GAAblC,aAAa;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}